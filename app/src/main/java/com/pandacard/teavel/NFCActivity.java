package com.pandacard.teavel;import android.app.PendingIntent;import android.content.Intent;import android.content.IntentFilter;import android.nfc.NfcAdapter;import android.nfc.tech.IsoDep;import android.nfc.tech.NfcF;import android.nfc.tech.NfcV;import android.os.Bundle;import android.widget.Toast;import androidx.appcompat.app.AppCompatActivity;import com.crb.cttic.pay.card.bean.CardInfoGather;import com.crb.cttic.pay.device.SmartCardNfcTag;import com.crb.cttic.pay.mvp.view.activity.model.entity.CardManageData;import com.crb.cttic.pay.utils.CircleDepositCardUtils;import com.crb.cttic.pay.utils.ReadCardUtils;import com.pandacard.teavel.utils.LUtils;public class NFCActivity extends AppCompatActivity {    private static String TAG = "NFCActivity";    public static String[][] TECHLISTS;    public static IntentFilter[] FILTERS;    static {        TECHLISTS = new String[][]{                {IsoDep.class.getName()},                {NfcV.class.getName()}, {NfcF.class.getName()},};        try {            FILTERS = new IntentFilter[]{                    new IntentFilter(                            NfcAdapter.ACTION_TECH_DISCOVERED, "*/*")};        } catch (IntentFilter.MalformedMimeTypeException e) {            e.printStackTrace();        }    }    private PendingIntent pendingIntent;    private NfcAdapter nfcAdapter;    private int state;    private CardManageData data;    private boolean depositStatus;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_nfc);        data = (CardManageData) getIntent().getSerializableExtra("CardManageData");        if (data != null) {            //圈存            state = 1;        } else {            //读卡            state = 0;        }        //初始化NFC        initNfc();    }    @Override    protected void onNewIntent(Intent intent) {        super.onNewIntent(intent);        SmartCardNfcTag ctticReader = SmartCardNfcTag.getInstance(intent);        switch (state) {            case 0:                //读卡                ReadCardUtils.getInstance().getReadCardInfo(NFCActivity.this, "", ctticReader, new ReadCardUtils.ReadCardUtilsListener() {                    @Override                    public void readCardFail(int errCode, String errMes) {                        showShortToast("读卡失败 errCode =" + errCode + "errMes=" + errMes.toString());                        LUtils.i(TAG, errMes.toString());                    }                    @Override                    public void readCardSuccess(CardInfoGather cardInfoGather) {                        showShortToast("读卡成功" + cardInfoGather.toString());                        setResult(RESULT_OK, new Intent().putExtra(ParamConst.CARD_INFO_GATHER, cardInfoGather));                        LUtils.i(TAG, cardInfoGather.toString());                    }                });                break;            case 1:                //圈存                if (depositStatus) {                    showShortToast("您已经圈存过了");                    return;                }                CircleDepositCardUtils.getInstance().toCircleDeposiCard(NFCActivity.this, ctticReader, data, new CircleDepositCardUtils.CircleDepositCardListener() {                    @Override                    public void cardRechargeSuccess() {                        //                        LogUtil.e("圈存成功");                        showShortToast("圈存成功");                        depositStatus = true;                    }                    @Override                    public void cardRechargeFail() {                        //                        LogUtil.e("圈存失败");                        showShortToast("圈存失败");                    }                });                break;        }    }    protected void showShortToast(String message) {        Toast.makeText(this.getApplicationContext(), message, Toast.LENGTH_SHORT).show();    }    private void initNfc() {        pendingIntent = PendingIntent.getActivity(this, 0, new Intent(this,                getClass()).addFlags(Intent.FLAG_ACTIVITY_SINGLE_TOP), 0);        nfcAdapter = NfcAdapter.getDefaultAdapter(this);    }    @Override    protected void onResume() {        super.onResume();        if (nfcAdapter != null) {            nfcAdapter.enableForegroundDispatch(this, pendingIntent,                    FILTERS, TECHLISTS);        }    }    @Override    protected void onPause() {        super.onPause();        if (nfcAdapter != null) {            nfcAdapter.disableForegroundDispatch(this);        }    }}